// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '~@angular/material' as mat;
// Plus imports for other components in your app.


// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$plantuml-editor-primary-palette: (
  50 : #f9ebeb,
  100 : #f0cccc,
  200 : #e6aaaa,
  300 : #db8888,
  400 : #d46f6f,
  500 : #cc5555,
  600 : #c74e4e,
  700 : #c04444,
  800 : #b93b3b,
  900 : #ad2a2a,
  A100 : #ffefef,
  A200 : #ffbcbc,
  A400 : #ff8989,
  A700 : #ff6f6f,
  contrast: (
    50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #000000,
    400 : #000000,
    500 : #ffffff,
    600 : #ffffff,
    700 : #ffffff,
    800 : #ffffff,
    900 : #ffffff,
    A100 : #000000,
    A200 : #000000,
    A400 : #000000,
    A700 : #000000,
  )
);
$plantuml-editor-primary: mat.define-palette($plantuml-editor-primary-palette);
$plantuml-editor-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$plantuml-editor-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$plantuml-editor-theme: mat.define-dark-theme((
  color: (
    primary: $plantuml-editor-primary,
    accent: $plantuml-editor-accent,
    warn: $plantuml-editor-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($plantuml-editor-theme);
